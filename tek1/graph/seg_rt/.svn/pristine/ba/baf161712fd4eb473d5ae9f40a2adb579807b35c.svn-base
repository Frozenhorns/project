/*
** perlin_texture.c for perlin in /home/guiho_r/tek1/rt/src/texture
** 
** Made by ronan guiho
** Login   <guiho_r@epitech.net>
** 
** Started on  Tue May 15 17:27:59 2012 ronan guiho
** Last update Fri May 25 16:05:11 2012 ronan guiho
*/

#include <math.h>
#include <stdlib.h>

#include "init.h"
#include "perlin_noise.h"
#include "utils.h"
#include "calc.h"
#include "image.h"
#include "texture.h"
#include "object.h"

int		perlin_texture(t_object *obj, t_perlin *perlin,
			       t_color *color, double *old_pos)
{
  double	value;
  double	rayon;
  double	utils[3];
  int		texture[2];
  double	pos[3];

  modif_position(old_pos, obj, pos, INVERSE_ROTATION);
  rayon = (double)((t_sphere *)obj->son)->radius;
  utils[U] = atan(pos[Y] / pos[X]);
  utils[V] = asin(pos[Z] / rayon);
  utils[V] += M_PI;
  utils[T] = (double)FREQUENCE * (utils[U] / M_PI + 0.5);
  texture[Y] = ABS((int)(SIZE_Y * (utils[T] -	\
						     (int)utils[T])));
  utils[T] = 0.5 * (double)FREQUENCE * utils[V] / M_PI;
  texture[X] = ABS((int)(SIZE_X * (utils[T] - \
						    (int)utils[T])));
  texture[X] = texture[X] % SIZE_X;
  texture[Y] = texture[Y] % SIZE_Y;
  value = perlin->perlin[texture[Y]][texture[X]];
  color->red = (perlin->begin->red * (1.0 - value) + perlin->end->red * value);
  color->green = (perlin->begin->green * (1.0 - value) + perlin->end->green * value);
  color->blue = (perlin->begin->blue * (1.0 - value) + perlin->end->blue * value);
  return (EXIT_SUCCESS);
}
