/*
** obj_create_cube.c for obj_cube in /home/guiho_r/tek1/rt/src/obj
** 
** Made by ronan guiho
** Login   <guiho_r@epitech.net>
** 
** Started on  Thu May 31 19:34:07 2012 ronan guiho
** Last update Sun Jun  3 06:24:45 2012 ronan guiho
*/

#include <stdio.h>
#include <stdlib.h>

#include "global.h"
#include "object.h"

int		obj_duplique_double_tab(double *tab, double *tab1,
					int count)
{
  int		i;

  i = 0;
  while (i < count)
    {
      tab[i] = tab1[i];
      i++;
    }
  return (EXIT_SUCCESS);
}

int		obj_duplique_content(t_object *obj, t_object *obj1)
{
  obj_duplique_double_tab(obj->effect, obj1->effect, NB_DIMENSION);
  obj->image = obj1->image;
  obj->material = obj1->material;
  obj->image_bump = obj1->image_bump;
  obj->type = PLAN;
  obj_duplique_double_tab(obj->position, obj1->position, NB_DIMENSION);
  obj_duplique_double_tab(obj->rotation, obj1->rotation, NB_DIMENSION);
  if ((obj->color = malloc(sizeof(*obj->color))) == NULL)
    return (EXIT_FAILURE);
  obj->inter = obj1->inter;
  obj->attr = obj1->attr;
  obj->perlin = obj1->perlin;
  obj->inhibitor = obj1->inhibitor;
  return (EXIT_SUCCESS);
}

int     	obj_duplique(t_object **list, t_object *obj,
			     double size)
{
  t_object	*ptr;
  t_object	*tmp;

  tmp = *list;
  if ((ptr = malloc(sizeof(*ptr))) == NULL)
    return (EXIT_FAILURE);
  ptr->next = NULL;
  obj_duplique_content(ptr, obj);
  if (*list == NULL)
    *list = ptr;
  else
    {
      while (tmp->next)
	tmp = tmp->next;
      tmp->next = ptr;
    }
  return (EXIT_SUCCESS);
}

int		obj_analize_cube(t_object **obj)
{
  t_object	*tmp;
  t_object	*list;

  tmp = *obj;
  while (tmp)
    {
      if (tmp->type == CUBE)
	{
	  list = obj_create_cube_plan(tmp);
	  *obj = list;
	}
      tmp = tmp->next;
    }
  return (EXIT_SUCCESS);
}
