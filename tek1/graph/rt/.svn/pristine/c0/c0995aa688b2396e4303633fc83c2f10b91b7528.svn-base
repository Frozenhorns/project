#!/usr/bin/python2.7
#
#by ozouf_h

from sub_ui import *
from scene import *
from key import *
from objects import *

try:
    from PyQt4.QtCore import *  # Moteur controle Qt
    from PyQt4.QtGui import *   # IHM Qt
except:
    import time                 # Gestion heures systeme
    for i in range(1, 11):
        print ("PyQt is not install - check in (%d/10)", i)
        time.sleep(5)
        sys.exit(1)

class   Ui_edit_movie(QDialog):
    def __init__(self, Window=None, path="./toto.xml"):
        super(Ui_edit_movie, self).__init__(Window)

    def init(self, Window=None, path="./toto.xml"):
        self.GridLay = QGridLayout(self)
        self.Coor = QGroupBox("Key images", self)
        hLayout = QHBoxLayout(self)
        self.Parent = Window
        act = QPushButton("Add key", self)
        act.connect(act, SIGNAL("clicked()"), self.add_elm)
        hLayout.addWidget(act)
        act = QPushButton("Quit", self)
        act.connect(act, SIGNAL("clicked()"), self.quit)
        hLayout.addWidget(act)
        self.item = QListWidget()
        f = Parsing("./toto.xml")
        self.i = 0
        self.scene = f.parse_scene()
        self.keys = keys(self.scene)
        self.edit_scene = self.scene
        self.s_pos = self.scene.camera.pos
        self.s_rot = self.scene.camera.rot
        self.Coor.setLayout(hLayout)
        self.GridLay.addWidget(self.Coor, 0, 0)
        self.GridLay.addWidget(self.item, 1, 0)
        self.show()

    def add_elm(self, Window=None):
        super(Ui_edit_movie, self).__init__(Window)
        self.pos = Coor(Window, x=str(self.s_pos.x), y=str(self.s_pos.y), z=str(self.s_pos.z))
        self.rot = Coor(Window, x=str(self.s_rot.x), y=str(self.s_rot.y), z=str(self.s_rot.z))
        self.GridLay = QGridLayout(self)
        self.Coor = QGroupBox("Position", self)
        hLayout = QHBoxLayout(self)

        hLayout.addWidget(self.pos.Lab_x)
        hLayout.addWidget(self.pos.x)
        hLayout.addWidget(self.pos.Lab_y)
        hLayout.addWidget(self.pos.y)
        hLayout.addWidget(self.pos.Lab_z)
        hLayout.addWidget(self.pos.z)

        self.Coor.setLayout(hLayout)
        self.GridLay.addWidget(self.Coor, 0, 0)
        self.Coor = QGroupBox("Rotation", self)
        hLayout = QHBoxLayout(self)

        hLayout.addWidget(self.rot.Lab_x)
        hLayout.addWidget(self.rot.x)
        hLayout.addWidget(self.rot.Lab_y)
        hLayout.addWidget(self.rot.y)
        hLayout.addWidget(self.rot.Lab_z)
        hLayout.addWidget(self.rot.z)

        self.Coor.setLayout(hLayout)
        self.GridLay.addWidget(self.Coor, 1, 0)

        hLayout = QHBoxLayout(self)
        act = QPushButton("Ok", self)
        act.connect(act, SIGNAL("clicked()"), self.create_new_key)
        hLayout.addWidget(act)
        act = QPushButton("Cancel", self)
        act.connect(act, SIGNAL("clicked()"), self.quit)
        hLayout.addWidget(act)

        self.GridLay.addLayout(hLayout, 2, 0)
        self.show()

    def quit(self):
        if (self.Parent):
            self.Parent.setEnabled(True)
        self.reject()

    def create_new_key(self):
        px = self.pos.x.text()
        py = self.pos.y.text()
        pz = self.pos.z.text()
        rx = self.rot.x.text()
        ry = self.rot.y.text()
        rz = self.rot.z.text()
        print str(float(str(px)))
        self.edit_scene.camera.pos = Postion(float(str(px)), float(str(py)), float(str(pz)))
        self.edit_scene.camera.rot = Postion(float(str(rx)), float(str(ry)), float(str(rz)))
        self.s_pos = Postion(float(str(px)), float(str(py)), float(str(pz)))
        self.s_rot = Postion(float(str(rx)), float(str(ry)), float(str(rz)))
        self.item.addItem("Key Image n" + str(self.i))
        new_cam = self.edit_scene.camera
        new_objects = self.edit_scene.objects
        new_light = self.edit_scene.lights
        new_name = self.edit_scene.name
        new_aa = self.edit_scene.aa
        self.edit_scene = Scene(new_cam, new_objects, new_light, new_name, new_aa)
        self.keys.add(self.edit_scene)
        self.i += 1
        self.quit()
