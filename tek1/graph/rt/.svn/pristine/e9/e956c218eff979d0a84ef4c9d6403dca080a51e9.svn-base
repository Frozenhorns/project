/*
** calc_cut_texture.c for rt in /home/phalip_z//rt
** 
** Made by zoe phalippou
** Login   <phalip_z@epitech.net>
** 
** Started on  Thu May 31 15:51:57 2012 zoe phalippou
** Last update Sat Jun  2 13:33:18 2012 zoe phalippou
*/

#include <stdio.h>
#include <stdlib.h>


#include        "raytracer.h"
#include        "camera.h"
#include        "object.h"
#include        "detail.h"
#include        "calc.h"
#include        "utils.h"
#include        "inter.h"
#include	"texture.h"

static	int	put_nbr_k(t_object *obj)
{
  if (obj->type == SPHERE || obj->type == CON || obj->type == CYL
      || obj->type == PARABOLOIDE ||  obj->type == HYPERBOLOIDE)
    return (2);
  if (obj->type == PLAN)
    return (1);
  return (0);
}

static int	condition_color(t_color *tcolor, t_color *color, int diff)
{
  if ((tcolor->green <= (color->green + (double)diff)
       && tcolor->green >= (color->green - (double)diff))
      && (tcolor->red <= (color->red + (double)diff)
	  && tcolor->red >= (color->red - (double)diff)) &&
      (tcolor->blue <= (color->blue + (double)diff)
       && tcolor->blue >= (color->blue - (double)diff)))
    return (EXIT_SUCCESS);
  return (EXIT_FAILURE);
}

void	calc_cut_texture(double *k, t_object *obj,
			 t_detail *detail, double *vector, t_camera *camera)
{
  int		nb_k;
  t_color	color;
  int		utils[2];
  int		i;

  i = -1;
  if (detail->object)
    {
      utils[0] = (int)detail->object->type;
      utils[1] = TEXTURE;
    }
  nb_k = put_nbr_k(obj);
  while (++i < nb_k)
    {
      calc_point(camera->position, vector, detail->position, k[i]);
      texture_mapping(obj, &color, detail->position, utils);
      if (obj->image->cut_texture->flag == 1)
	{
	  if (!condition_color(obj->image->cut_texture->tcolor,
			       &color, obj->image->cut_texture->interval))
	      k[i] = -1.000;
	}
      else if (obj->image->cut_texture->flag == 0)
	if (condition_color(obj->image->cut_texture->tcolor,
			    &color, obj->image->cut_texture->interval))
	    k[i] = -1.000;
    }
}
